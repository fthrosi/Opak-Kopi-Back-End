import { ReservationController } from "./reservation.controller.js";
import { Router } from "express";
import { validateToken, validateRole } from "../../middleware/auth.js";
const reservationController = new ReservationController();
const routerReservation = Router();
routerReservation.get("/getAll", validateToken, validateRole(["Kasir", "Owner"]), (req, res) => reservationController.findAll(req, res));
routerReservation.get("/getBy/:id", validateToken, validateRole(["Pelanggan", "Kasir", "Owner"]), (req, res) => reservationController.findById(req, res));
routerReservation.get("/getByUser", validateToken, (req, res) => reservationController.findByUser(req, res));
routerReservation.post("/add", validateToken, (req, res) => reservationController.create(req, res));
routerReservation.get("/getByRange", validateToken, validateRole(["Kasir", "Owner"]), (req, res) => reservationController.getReservationsByRange(req, res));
routerReservation.put("/checkin/:id", validateToken, validateRole(["Kasir"]), (req, res) => reservationController.Checkin(req, res));
routerReservation.put("/update/:id", validateToken, validateRole(["Kasir", "Pelanggan"]), (req, res) => reservationController.update(req, res));
routerReservation.delete("/delete/:id", validateToken, (req, res) => reservationController.delete(req, res));
export default routerReservation;
