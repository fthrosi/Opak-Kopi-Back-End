import { UserController } from "./user.controller.js";
import { Router } from "express";
import { uploadProfileImage } from "../../middleware/uploadImage.js";
import { validateToken, validateRole } from "../../middleware/auth.js";
import { validateCreateUserBody } from "../../middleware/user.js";
const userController = new UserController();
const userRouter = Router();
userRouter.get("/getAll", validateToken, (req, res) => userController.getAllUsers(req, res));
userRouter.get("/:id", validateToken, (req, res) => userController.getUserById(req, res));
userRouter.get("/role/:role", validateToken, validateRole(['Owner']), (req, res) => userController.getUsersByRole(req, res));
userRouter.post("/add", validateToken, validateRole(['Owner']), validateCreateUserBody, (req, res) => userController.createUser(req, res));
userRouter.put("/update", validateToken, uploadProfileImage.single('image'), (req, res) => userController.updateUser(req, res));
userRouter.put("/updateEmail", validateToken, (req, res) => userController.updateEmail(req, res));
userRouter.put("/delete/:id", validateToken, validateRole(['Owner']), (req, res) => userController.deleteUser(req, res));
userRouter.put("/changePassword", validateToken, (req, res) => userController.changePassword(req, res));
userRouter.post("/favoritemenu/add/:id", validateToken, validateRole(['Pelanggan']), (req, res) => userController.createFavoriteMenu(req, res));
userRouter.get("/favoritemenu/getAll", validateToken, validateRole(['Pelanggan']), (req, res) => userController.getAllFavoriteMenus(req, res));
userRouter.delete("/favoritemenu/delete/:id", validateToken, validateRole(['Pelanggan']), (req, res) => userController.deleteFavoriteMenu(req, res));
userRouter.get("/customer/stats", validateToken, validateRole(['Owner']), (req, res) => userController.getAllCustomersWithStats(req, res));
userRouter.put("/updateStatus/:id", validateToken, validateRole(['Owner']), (req, res) => userController.updateStatus(req, res));
export default userRouter;
